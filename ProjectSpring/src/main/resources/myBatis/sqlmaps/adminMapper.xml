<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Admin">
   <resultMap id="adminMemberMap"  type="com.spring.member.vo.MemberVo"  >
     <result property="mem_id"            column="MEM_ID"             javaType="string" /> 
     <result property="mem_pw"            column="MEM_PW"             javaType="string" /> 
     <result property="mem_name"          column="MEM_NAME"           javaType="string" /> 
     <result property="mem_gender"        column="MEM_GENDER"         javaType="string" /> 
     <result property="mem_birth"         column="MEM_BIRTH"          javaType="string" /> 
     <result property="mem_email"         column="MEM_EMAIL"          javaType="string" /> 
     <result property="mem_phone"         column="MEM_PHONE"          javaType="string" /> 
     <result property="mem_zipcode"       column="MEM_ZIPCODE"        javaType="string" /> 
     <result property="mem_address"       column="MEM_ADDRESS"        javaType="string" /> 
     <result property="mem_detailaddress" column="MEM_DETAILADDRESS"  javaType="string" /> 
     <result property="mem_regdate"       column="MEM_REGDATE"        javaType="string" /> 
     <result property="mem_withdraw"      column="MEM_WITHDRAW"       javaType="string" /> 
     <result property="mem_point"         column="MEM_POINT"          javaType="int" /> 
   </resultMap>

  <!-- mem_id, mem_pw, mem_name, mem_gender, mem_birth mem_email mem_phone mem_zipcode mem_address mem_detailaddress mem_regdate mem_withdraw mem_point-->
  <!-- Stored Procedure Call  -->
  <select id="MemberList" statementType="CALLABLE" parameterType="hashmap" resultType="com.spring.member.vo.MemberVo" >
     {  CALL PKG_MEMBER.PROC_MEMBER_LIST(
       #{result, mode=OUT, jdbcType=CURSOR, javaType=ResultSet, resultMap=adminMemberMap  }
     ) }
  </select>
  
  <select id="MemberListWithPaging" resultType="com.spring.member.vo.MemberVo"  parameterType="com.spring.admin.vo.Criteria">
    SELECT 
     MEM_IDX
    ,MEM_ID           
    ,MEM_PW            
    ,MEM_NAME          
    ,MEM_GENDER       
    ,MEM_BIRTH       
    ,MEM_EMAIL       
    ,MEM_PHONE        
    ,MEM_ZIPCODE       
    ,MEM_ADDRESS       
    ,MEM_DETAILADDRESS 
    ,MEM_REGDATE      
    ,MEM_WITHDRAW     
    ,MEM_POINT         
  FROM (
    SELECT
       MEM_IDX
      ,MEM_ID           
      ,MEM_PW            
      ,MEM_NAME          
      ,MEM_GENDER       
      ,MEM_BIRTH       
      ,MEM_EMAIL       
      ,MEM_PHONE          
      ,MEM_ZIPCODE       
      ,MEM_ADDRESS       
      ,MEM_DETAILADDRESS 
      ,MEM_REGDATE      
      ,MEM_WITHDRAW     
      ,MEM_POINT  
      ,ROW_NUMBER() OVER(ORDER BY MEM_IDX DESC) AS rNUM
    FROM MEMBER
  ) MP
  WHERE rNUM BETWEEN #{rowStart} AND #{rowEnd}
  ORDER BY MEM_IDX DESC
  </select>
  
  <select id="ListCount" resultType="int">
	<![CDATA[
		SELECT COUNT(MEM_IDX)
		  FROM MEMBER
		 WHERE MEM_IDX > 0
	]]>
	</select>
  
  <delete id="DeleteMember" parameterType="com.spring.member.vo.MemberVo">
    DELETE FROM MEMBER WHERE MEM_ID = #{mem_id}	
  </delete>
  
  <select id="Read" parameterType="String" resultType="com.spring.member.vo.MemberVo">
    SELECT 
       MEM_IDX
      ,MEM_ID           
      ,MEM_PW            
      ,MEM_NAME          
      ,MEM_GENDER       
      ,MEM_BIRTH       
      ,MEM_EMAIL       
      ,MEM_PHONE        
      ,MEM_ZIPCODE       
      ,MEM_ADDRESS       
      ,MEM_DETAILADDRESS 
      ,MEM_REGDATE      
      ,MEM_WITHDRAW     
      ,MEM_POINT         
    FROM MEMBER
    WHERE MEM_ID = #{mem_id}
  </select>
  
  <update id="UpdateMember" parameterType="com.spring.member.vo.MemberVo">
    UPDATE MEMBER
      SET
    	 MEM_PW=#{mem_pw}            
  	    ,MEM_NAME=#{mem_name}          
        ,MEM_BIRTH=#{mem_birth}       
        ,MEM_EMAIL=#{mem_email}       
        ,MEM_PHONE=#{mem_phone}        
        ,MEM_ZIPCODE=#{mem_zipcode}       
        ,MEM_ADDRESS=#{mem_address}       
        ,MEM_DETAILADDRESS=#{mem_detailaddress} 
        ,MEM_POINT=#{mem_point} 
	  WHERE
	    MEM_ID=#{mem_id}
  </update>

  
</mapper>

















